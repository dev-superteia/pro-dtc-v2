version: "3"
services:
  app:
    image: frontend
    build: ./frontend
    container_name: frontend
    env_file:
      - .env
    ports:
      - "8080:8080"
  web:
    build:
      context: ./backend
      args:
        - ENVIRONMENT=${ENVIRONMENT}
    volumes:
      - ./backend:/app
      - ./backend/app/logs:/app/logs
    image: pythonweb     
    container_name: prodtc-v2
    ports:
      - "${PORT}:8000"
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - "backend"  
  db:
    image: postgres:12-alpine
    container_name: db-prodtc
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    env_file:
      - .env   
  redis:
    image: "redis:4.0-alpine"
    command: redis-server --appendonly yes --requirepass devpassword
    volumes:
      - "./redis:/var/lib/redis/data"
    ports:
      - "6379:6379"
    networks:
      - "backend"    
volumes:
  postgres_data:
networks:
  backend:
    name: "backend"
    driver: "bridge"       